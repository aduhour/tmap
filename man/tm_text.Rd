% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_layers_text.R
\name{tm_text}
\alias{tm_text}
\title{Map layer: text}
\usage{
tm_text(
  text = tm_const(),
  text.scale = tm_scale(),
  text.legend = tm_legend(),
  text.chart = tm_chart_none(),
  text.free = NA,
  size = tm_const(),
  size.scale = tm_scale(),
  size.legend = tm_legend(),
  size.chart = tm_chart_none(),
  size.free = NA,
  col = tm_const(),
  col.scale = tm_scale(),
  col.legend = tm_legend(),
  col.chart = tm_chart_none(),
  col.free = NA,
  col_alpha = tm_const(),
  col_alpha.scale = tm_scale(),
  col_alpha.legend = tm_legend(),
  col_alpha.chart = tm_chart_none(),
  col_alpha.free = NA,
  fontface = tm_const(),
  fontface.scale = tm_scale(),
  fontface.legend = tm_legend(),
  fontface.chart = tm_chart_none(),
  fontface.free = NA,
  fontfamily = "",
  bgcol = tm_const(),
  bgcol.scale = tm_scale(),
  bgcol.legend = tm_legend(),
  bgcol.chart = tm_chart_none(),
  bgcol.free = NA,
  bgcol_alpha = tm_const(),
  bgcol_alpha.scale = tm_scale(),
  bgcol_alpha.legend = tm_legend(),
  bgcol_alpha.chart = tm_chart_none(),
  bgcol_alpha.free = NA,
  xmod = 0,
  xmod.scale = tm_scale(),
  xmod.legend = tm_legend_hide(),
  xmod.chart = tm_chart_none(),
  xmod.free = NA,
  ymod = 0,
  ymod.scale = tm_scale(),
  ymod.legend = tm_legend_hide(),
  ymod.chart = tm_chart_none(),
  ymod.free = NA,
  shadow = FALSE,
  plot.order = tm_plot_order("AREA", reverse = FALSE, na.order = "bottom"),
  trans.args = list(points.only = "ifany"),
  mapping.args = list(clustering = FALSE),
  zindex = NA,
  group = NA,
  group.control = "check",
  ...
)
}
\arguments{
\item{text, text.scale, text.legend, text.chart, text.free}{Visual variable that determines
the text. See details.}

\item{size, size.scale, size.legend, size.chart, size.free}{Visual variable that determines
the font size. See details.}

\item{col, col.scale, col.legend, col.chart, col.free}{Visual variable that determines
the col color. See details.}

\item{col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.chart, col_alpha.free}{Visual variable that determines
the border color alpha transparency. See Details.}

\item{fontface, fontface.scale, fontface.legend, fontface.chart, fontface.free}{Visual variable that determines
the font face. See Details.}

\item{fontfamily}{The font family. See \link[grid:gpar]{gpar()} for details.}

\item{bgcol, bgcol.scale, bgcol.legend, bgcol.chart, bgcol.free}{Visual variable that determines
the background color. See Details.}

\item{bgcol_alpha, bgcol_alpha.scale, bgcol_alpha.legend, bgcol_alpha.chart, bgcol_alpha.free}{Visual variable that determines
the background color transparency. See Details.}

\item{xmod, xmod.scale, xmod.legend, xmod.chart, xmod.free}{Transformation variable that determines the x offset. See details.}

\item{ymod, ymod.scale, ymod.legend, ymod.chart, ymod.free}{Transformation variable that determines the y offset. See details.
the text. See details.}

\item{shadow}{Shadow behind the text. Logical or color.}

\item{plot.order}{Specification in which order the spatial features are drawn.
See \code{\link[=tm_plot_order]{tm_plot_order()}} for details.}

\item{trans.args, mapping.args}{lists that are passed on to internal transformation
and mapping functions respectively.}

\item{zindex}{Map layers are drawn on top of each other. The \code{zindex} numbers
(one for each map layer) determines the stacking order.
By default the map layers are drawn in the order they are called.}

\item{group}{Name of the group to which this layer belongs. This is only
relevant in view mode, where layer groups can be switched (see \code{group.control})}

\item{group.control}{In view mode, the group control determines how layer
groups can be switched on and off. Options: \code{"radio"} for radio buttons
(meaning only one group can be shown), \code{"check"} for check boxes (so multiple groups can be shown),
and \code{"none"} for no control (the group cannot be (de)selected).}

\item{...}{to catch deprecated arguments from version < 4.0}
}
\description{
Map layer that draws symbols Supported visual variables are: \code{text}
(the text itself) \code{col} (color), \code{size} (font size), and \code{fontface} (font face).
}
\details{
The visual variable arguments (e.g. \code{col}) can be specified with either a
data variable name (of the object specified in \code{\link[=tm_shape]{tm_shape()}}), or with a visual
value (for \code{col}, a color is expected). Multiple values can be specified:
in that case facets are created. These facets can be combined with other
faceting data variables, specified with \code{\link[=tm_facets]{tm_facets()}}.

The \code{.scale} arguments determine the used scale to map the data values to
visual variable values. These can be specified with one of the available
\code{tm_scale_()} functions. The default scale that is used is specified by the
tmap option \code{scales.var}.

The \code{.legend} arguments determine the used legend, specified with \code{\link[=tm_legend]{tm_legend()}}.
The default legend and its settings are determined by the tmap options \code{legend.}.

The \code{.free} arguments determine whether scales are applied freely across facets,
or shared. A logical value is required. They can also be specified with a
vector of three logical values; these determine whether scales are applied
freely per facet dimension. This is only useful when facets are applied
(see \code{\link[=tm_facets]{tm_facets()}}). There are maximally three facet dimensions: rows, columns,
and pages. This only applies for a facet grid (\code{\link[=tm_facets_grid]{tm_facets_grid()}}).
For instance, \code{col.free = c(TRUE, FALSE, FALSE)} means that for the visual
variable \code{col}, each row of facets will has its own scale, and therefore its
own legend. For facet wraps and stacks (\code{\link[=tm_facets_wrap]{tm_facets_wrap()}} and \code{\link[=tm_facets_stack]{tm_facets_stack()}})
there is only one facet dimension, so the \code{.free} argument requires only one logical value.
}
\examples{
# Need to be updated. The following is just to illustrate bgcol(_alpha)
tm_shape(World) + tm_polygons() +
	tm_text("name", bgcol = "economy", bgcol_alpha = .5, shadow = TRUE)

tm_shape(World) +
  tm_text(text = "name", 
    size = .4, 
    bgcol = "economy")

tm_shape(World) +
  tm_text(text = "name", 
    size = .4, 
    bgcol = "economy", 
    bgcol.scale = tm_scale_categorical(values = cols4all::.P$hcl$cat$set2),
    bgcol_alpha = "pop_est",
    bgcol_alpha.scale = tm_scale_intervals(style = "kmeans"))

## xymod
metro$initial = substr(metro$name,1,1)
metro$az = (match(metro$initial, LETTERS)-1) /25

tm_shape(metro) +
	tm_dots("red") +
	tm_text("initial", ymod = "az")

}
