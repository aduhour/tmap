% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qtm.R
\name{qtm}
\alias{qtm}
\title{Quick thematic map plot}
\usage{
qtm(
  shp,
  fill = tm_const(),
  col = tm_const(),
  size = tm_const(),
  shape = tm_const(),
  lwd = tm_const(),
  lty = tm_const(),
  fill_alpha = tm_const(),
  col_alpha = tm_const(),
  text = tm_const(),
  text_col = tm_const(),
  text_size = tm_const(),
  by = NULL,
  scale = NULL,
  title = NULL,
  crs = NULL,
  bbox = NULL,
  basemaps = NULL,
  overlays = NULL,
  zindex = NA,
  group = NA,
  group.control = "check",
  style = NULL,
  format = NULL,
  ...
)
}
\arguments{
\item{shp}{One of:
\itemize{
\item shape object, which is an object from a class defined by the \code{\link[sf:sf]{sf}}
or \code{\link[stars:st_as_stars]{stars}} package. Objects from the packages \code{sp}
and \code{raster} are also supported, but discouraged.
\item Not specified, i.e. \code{qtm()} is executed. In this case a plain interactive
map is shown.
\item An OpenStreetMap search string, e.g. \code{qtm("Amsterdam")}. In this case a
plain interactive map is shown positioned according to the results of the
search query (from OpenStreetMap nominatim)
}}

\item{fill, col, size, shape, lwd, lty, fill_alpha, col_alpha}{Visual variables.}

\item{text, text_col, text_size}{Visual variables.}

\item{by}{data variable name by which the data is split, or a vector of two
variable names to split the data by two variables (where the first is used
for the rows and the second for the columns). See also \code{\link[=tm_facets]{tm_facets()}}.}

\item{scale}{numeric value that serves as the global scale parameter. All font
sizes, symbol sizes, border widths, and line widths are controlled by this value.
The parameters \code{symbols.size}, \code{text.size}, and \code{lines.lwd} can be scaled
separately with respectively \code{symbols.scale}, \code{text.scale}, and
\code{lines.scale}. See also \code{...}.}

\item{title}{main title. For legend titles, use \code{X.style}, where X is the
layer name (see \code{...}).}

\item{crs}{Either a \code{\link[sf:st_crs]{crs}} object or a character value
(\code{PROJ.4} character string). By default, the projection is used that is
defined in the \code{shp} object itself.}

\item{bbox}{bounding box. Argument passed on to \code{\link[=tm_shape]{tm_shape()}}}

\item{basemaps}{name(s) of the provider or an URL of a tiled basemap.
It is a shortcut to \code{\link[=tm_basemap]{tm_basemap()}}. Set to \code{NULL} to disable basemaps.
By default, it is set to the tmap option \code{basemaps}.}

\item{overlays}{name(s) of the provider or an URL of a tiled overlay map.
It is a shortcut to \code{\link[=tm_tiles]{tm_tiles()}}.}

\item{zindex}{zindex}

\item{group}{group}

\item{group.control}{group.control}

\item{style}{Layout options (see \code{\link[=tm_layout]{tm_layout()}}) that define the style.
See \code{\link[=tmap_style]{tmap_style()}} for details.}

\item{format}{Layout options (see \code{\link[=tm_layout]{tm_layout()}}) that define the format.
See \code{\link[=tmap_format]{tmap_format()}} for details.}

\item{...}{arguments passed on to the \verb{tm_*} functions. The prefix of these
arguments should be with the layer function name without \code{"tm_"} and a period.
For instance, the palette for polygon fill color is called \code{fill.palette}.
The following prefixes are supported: \code{shape.}, \code{fill.}, \code{borders.}, \code{polygons.},
\code{symbols.}, \code{dots.}, \code{lines.}, \code{raster.}, \code{text.}, \code{layout.}, \code{grid.},
\code{facets.}, and \code{view.}. Arguments that have a unique name, i.e. that does
not exist in any other layer function, e.g. \code{convert2density}, can also be
called without prefix.}
}
\value{
A \code{\link{tmap-element}}
}
\description{
Draw a thematic map quickly. This function is a convenient wrapper of the main
plotting method of stacking \code{\link{tmap-element}}s. Without arguments or with a
search term, this functions draws an interactive map.
}
\details{
The first argument is a shape object (normally specified by \code{\link[=tm_shape]{tm_shape()}}).
The next arguments, from \code{fill} to \code{raster}, are the aesthetics from the main
layers. The remaining arguments are related to the map layout. Any argument
from any main layer function, such as \code{\link[=tm_polygons]{tm_polygons()}}, can be specified (see \code{...}).
It is also possible to stack \code{\link{tmap-element}}s on a \code{qtm} plot. See examples.

By default, a scale bar is shown. This option can be set with \code{\link[=tmap_options]{tmap_options()}}
(argument \code{qtm.scalebar}). A minimap is shown by default when \code{qtm} is called
without arguments of with a search term. This option can be set with \code{\link[=tmap_options]{tmap_options()}}
(argument \code{qtm.minimap}).
}
\examples{
data(World, rivers, metro)

# just the map
qtm(World)

# choropleth
qtm(World, fill = "economy", format = "World", style = "col_blind", projection = "+proj=eck4")

# choropleth with more specifications
qtm(World, fill="HPI", fill.n = 9, fill.palette = "div",
    fill.title = "Happy Planet Index", fill.id = "name", 
    style = "gray", format = "World", projection = "+proj=eck4")
# this map can also be created with the main plotting method,
# which is recommended in this case.
\dontrun{
tm_shape(World, projection = "+proj=eck4") +
    tm_polygons("HPI", n = 9, palette = "div",
        title = "Happy Planet Index", id = "name") +
tm_style("gray") +
tm_format("World")
}

# bubble map
\dontrun{
qtm(World, borders = NULL) + 
qtm(metro, symbols.size = "pop2010", 
    symbols.title.size= "Metropolitan Areas", 
    symbols.id= "name",
    format = "World")
}

# dot map
\dontrun{
current.mode <- tmap_mode("view")
qtm(metro, bbox = "China")
tmap_mode(current.mode) # restore mode
}

\dontrun{
# without arguments, a plain interactive map is shown (the mode is set to view)
qtm()

# search query for OpenStreetMap nominatim
qtm("Amsterdam")
}
}
\references{
Tennekes, M., 2018, {tmap}: Thematic Maps in {R},
Journal of Statistical Software, 84(6), 1-39, \doi{10.18637/jss.v084.i06}
}
