% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_layers_lines.R
\name{tm_lines}
\alias{tm_lines}
\title{Map layer: lines}
\usage{
tm_lines(
  col = tm_const(),
  col.scale = tm_scale(),
  col.legend = tm_legend(),
  col.free = NA,
  lwd = tm_const(),
  lwd.scale = tm_scale(),
  lwd.legend = tm_legend(),
  lwd.free = NA,
  lty = tm_const(),
  lty.scale = tm_scale(),
  lty.legend = tm_legend(),
  lty.free = NA,
  col_alpha = tm_const(),
  col_alpha.scale = tm_scale(),
  col_alpha.legend = tm_legend(),
  col_alpha.free = NA,
  linejoin = "round",
  lineend = "round",
  plot.order = tm_plot_order("LENGTH", reverse = FALSE, na.order = "bottom"),
  trans.args = list(lines.only = "ifany"),
  mapping.args = list(),
  zindex = NA,
  group = NA,
  group.control = "check",
  ...
)
}
\arguments{
\item{col, col.scale, col.legend, col.free}{Visual variable that determines the col color. See details.}

\item{lwd, lwd.scale, lwd.legend, lwd.free}{Visual variable that determines the line width. See details.}

\item{lty, lty.scale, lty.legend, lty.free}{Visual variable that determines the line type. See details.}

\item{col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.free}{Visual variable that determines the border color alpha transparency. See details.}

\item{linejoin, lineend}{line join and line end. See \code{\link[grid:gpar]{gpar}} for details.}

\item{plot.order}{Specification in which order the spatial features are drawn. See \code{\link{tm_plot_order}} for details.}

\item{trans.args, mapping.args}{lists that are passed on to internal transformation and mapping functions respectively}

\item{zindex}{Map layers are drawn on top of each other. The \code{zindex} numbers (one for each map layer) determines the stacking order. By default the map layers are drawn in the order they are called.}

\item{group}{Name of the group to which this layer belongs. This is only relevant in view mode, where layer groups can be switched (see `group.control`)}

\item{group.control}{In view mode, the group control determines how layer groups can be switched on and off. Options: `"radio"` for radio buttons (meaning only one group can be shown), `"check"` for check boxes (so multiple groups can be shown), and `"none"` for no control (the group cannot be (de)selected).}

\item{...}{to catch deprecated arguments from version < 4.0}
}
\description{
Map layer that draws symbols Supported visual variables are: \code{col} (the color), \code{lwd} (line width), \code{lty} (line type), and \code{col_alpha} (color alpha transparency).
}
\details{
The visual variable arguments (e.g. \code{col}) can be specified with either a data variable name (of the object specified in \code{\link{tm_shape}}), or with a visual value (for \code{col}, a color is expected). Multiple values can be specified: in that case facets are created. These facets can be combined with other faceting data variables, specified with \code{\link{tm_facets}}.

The \code{.scale} arguments determine the used scale to map the data values to visual variable values. These can be specified with one of the available \code{tm_scale_} functions. The default scale that is used is specified by the tmap option \code{scales.var}.

The \code{.legend} arguments determine the used legend, specified with \code{\link{tm_legend}}. The default legend and its settings are determined by the tmap options \code{legend.}.

The \code{.free} arguments determine whether scales are applied freely across facets, or shared. A logical value is required. They can also be specified with a vector of three logical values; these determine whether scales are applied freely per facet dimension. This is only useful when facets are applied (see \code{\link{tm_facets}}). There are maximally three facet dimensions: rows, columns, and pages. This only applies for a facet grid (\code{\link{tm_facets_grid}}). For instance, \code{col.free = c(TRUE, FALSE, FALSE)} means that for the visual variable \code{col}, each row of facets will have its own scale, and therefore its own legend. For facet wraps and stacks (\code{\link{tm_facets_wrap}} and \code{\link{tm_facets_stack}}) there is only one facet dimension, so the \code{.free} argument requires only one logical value.
}
\examples{
data(rivers)

tm_shape(rivers) +
	tm_lines()

tm_shape(rivers) +
	tm_lines(lwd = "scalerank")

tm_shape(rivers) +
	tm_lines(lwd = "scalerank", 
			 lwd.scale = tm_scale_continuous(values.scale = 2, n = 20), 
			 lwd.legend = tm_legend(orientation = "landscape", item.width = 2),
			 col = "type", 
			 col.scale = tm_scale(values = c("darkblue", "darkred")))

tm_shape(rivers) +
	tm_lines(lwd = "scalerank",
			 lty = "scalerank",
			 col = "scalerank",
			 col.scale = tm_scale_categorical(),
			 lty.legend = tm_legend_combine("lwd"),
			 col.legend = tm_legend_combine("lwd"))


### tmap3

tm_shape(World) +
	tm_fill() +
	tm_shape(rivers) +
	tm_lines(col="black", lwd="scalerank", scale=2, legend.lwd.show = FALSE) +
	tm_style("cobalt", title = "Rivers of the World") +
	tm_format("World")

}
